---
title: "Quarto and Pyodide"
author: "Austen Lamacraft"
date: "2024-06-24"
categories: [tech]
filters:
  - pyodide
---

Having recently switched these pages over to [Quarto](https://quarto.org/), I was keen to see how easy it was to build interactive pages. Support for [Observable](https://observablehq.com/) comes out of the box for JS people, but I was also thrilled to discover the extension [quarto-pyodide](https://quarto.thecoatlessprofessor.com/pyodide/) which makes it easy to incorporate [Pyodide](https://pyodide.org/en/stable/) – aka Python in the browser – into Quarto projects.

This is a Pyodide-enabled code cell in a Quarto HTML document.

__At the moment I can't do animations using Pyodide see [this issue](https://github.com/pyodide/matplotlib-pyodide/issues/46)__

```{pyodide-python}
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from functools import partial

fig, ax = plt.subplots()
line1, = ax.plot([], [], 'ro')

def init():
    ax.set_xlim(0, 2*np.pi)
    ax.set_ylim(-1, 1)
    return line1,

def update(frame, ln, x, y):
    x.append(frame)
    y.append(np.sin(frame))
    ln.set_data(x, y)
    return ln,

ani = FuncAnimation(
    fig, partial(update, ln=line1, x=[], y=[]),
    frames=np.linspace(0, 2*np.pi, 128),
    init_func=init, blit=True)

plt.show()
```

How would I run a simulation and see the results in real time?